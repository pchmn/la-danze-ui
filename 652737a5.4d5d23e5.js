(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{128:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return b}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function m(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=o.a.createContext({}),l=function(e){var n=o.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):m(m({},n),e)),t},u=function(e){var n=l(e.components);return o.a.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},d=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),d=r,b=u["".concat(i,".").concat(d)]||u[d]||s[d]||a;return t?o.a.createElement(b,m(m({ref:n},p),{},{components:t})):o.a.createElement(b,m({ref:n},p))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=d;var m={};for(var c in n)hasOwnProperty.call(n,c)&&(m[c]=n[c]);m.originalType=e,m.mdxType="string"==typeof e?e:r,i[1]=m;for(var p=2;p<a;p++)i[p]=t[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},92:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return m})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return l}));var r=t(3),o=t(7),a=(t(0),t(128)),i={title:"Form"},m={unversionedId:"usage/form/form",id:"usage/form/form",isDocsHomePage:!1,title:"Form",description:"Simplify use of react-hook-form with material-ui components. See demo.",source:"@site/docs/usage/form/form.md",slug:"/usage/form/form",permalink:"/la-danze-ui/docs/1.2.0/usage/form/form",editUrl:"https://github.com/pchmn/la-danze-ui/edit/main/packages/la-danze-ui-docs/docs/usage/form/form.md",version:"current",sidebar:"docs",previous:{title:"Animate appearance",permalink:"/la-danze-ui/docs/1.2.0/usage/animation/appearance"},next:{title:"Theme",permalink:"/la-danze-ui/docs/1.2.0/api/components/Theme"}},c=[{value:"Basic usage",id:"basic-usage",children:[]},{value:"Advanced usage",id:"advanced-usage",children:[{value:"Use <code>FormField</code> with custom components",id:"use-formfield-with-custom-components",children:[]}]},{value:"API",id:"api",children:[]}],p={toc:c};function l(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Simplify use of ",Object(a.b)("a",{parentName:"p",href:"https://react-hook-form.com/"},"react-hook-form")," with ",Object(a.b)("a",{parentName:"p",href:"https://next.material-ui.com/"},"material-ui")," components. See ",Object(a.b)("a",{parentName:"p",href:"https://pchmn.github.io/la-danze-ui/demo/forms"},"demo"),"."),Object(a.b)("p",null,"By using ",Object(a.b)("inlineCode",{parentName:"p"},"Form")," and ",Object(a.b)("inlineCode",{parentName:"p"},"FormField")," your form fields will be automatically mapped and some useful props will be added to field components (",Object(a.b)("inlineCode",{parentName:"p"},"error"),", ",Object(a.b)("inlineCode",{parentName:"p"},"helperText")," (error message) and ",Object(a.b)("inlineCode",{parentName:"p"},"disabled"),", which are material-ui component props)."),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"It uses react-hook-form ",Object(a.b)("inlineCode",{parentName:"p"},"Controller")," component under the hood")),Object(a.b)("h2",{id:"basic-usage"},"Basic usage"),Object(a.b)("p",null,"Set ",Object(a.b)("inlineCode",{parentName:"p"},"form")," prop on ",Object(a.b)("inlineCode",{parentName:"p"},"Form")," component (with react-hook-form ",Object(a.b)("inlineCode",{parentName:"p"},"useForm()")," hook), and ",Object(a.b)("inlineCode",{parentName:"p"},"name")," prop on ",Object(a.b)("inlineCode",{parentName:"p"},"FormField")," component (same as Controller component)."),Object(a.b)("p",null,"Below a form example with ",Object(a.b)("a",{parentName:"p",href:"https://github.com/jquense/yup"},"yup")," validation:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { Form, FormField } from 'la-danze-ui';\n\n\nconst validationSchema = yup.object({\n  email: yup\n    .string()\n    .required('Email mandatory')\n    .email('Wrong email format'),\n  username: yup\n    .string()\n    .required('Username mandatory')\n    .min(2, '2 characters minimum')\n});\n\nfunction App() {\n  const form = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  function onSubmit(values: any) {\n    console.log('form values', values);\n  }\n\n  return (\n    <Form form={form} onSubmit={form.handleSubmit(onSubmit)}>\n      <FormField name=\"email\" as={TextField} label=\"Email\" />\n      <FormField name=\"username\" as={TextField} label=\"Username\" />\n\n      <Button type=\"submit\">Validate</Button>\n    </Form>\n  );\n}\n")),Object(a.b)("h2",{id:"advanced-usage"},"Advanced usage"),Object(a.b)("h3",{id:"use-formfield-with-custom-components"},"Use ",Object(a.b)("inlineCode",{parentName:"h3"},"FormField")," with custom components"),Object(a.b)("p",null,"If you want to use ",Object(a.b)("inlineCode",{parentName:"p"},"FormField")," with custom component, your component props must inherit ",Object(a.b)("inlineCode",{parentName:"p"},"ComponentFormFieldProps"),". For additional props see react-hook-form ",Object(a.b)("inlineCode",{parentName:"p"},"Controller")," ",Object(a.b)("a",{parentName:"p",href:"https://react-hook-form.com/api/#Controller"},"doc"),"."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { useForm } from 'react-hook-form';\nimport { Form, FormField, ComponentFormFieldProps } from 'la-danze-ui';\n\nfunction App() {\n  const form = useForm();\n\n  function onSubmit(values: any) {\n    console.log('form values', values);\n  }\n\n  return (\n      <Form form={form} onSubmit={form.handleSubmit(onSubmit)}>\n        <FormField id=\"customInput\" name=\"customInput\" as={CustomInput} rules={{ required: { value: true, message: 'Custom Input is required' } }} />\n\n        <button type=\"submit\">Validate</button>\n      </Form>\n  );\n}\n\nconst CustomInput = React.forwardRef<any, ComponentFormFieldProps>(({ helperText, id, error, name, value, onChange }, ref) => {\n  return (\n    <>\n      <label htmlFor={id}>Custom Input</label>\n      <input id={id} name={name} ref={ref} type=\"text\" value={value} onChange={(e) => onChange(e.target.value)} />\n      {error &&\n        <p>{helperText}</p>\n      }\n    </>\n  )\n});\n")),Object(a.b)("h2",{id:"api"},"API"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"/la-danze-ui/docs/1.2.0/api/components/Form"},Object(a.b)("inlineCode",{parentName:"a"},"Form"))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",{parentName:"li",href:"/la-danze-ui/docs/1.2.0/api/components/FormField"},Object(a.b)("inlineCode",{parentName:"a"},"FormField")),"  ")))}l.isMDXComponent=!0}}]);