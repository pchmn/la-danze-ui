name: La Danze UI CI/CD

on:
  push:
    branches:
      - '**'
      - '!gh-pages'
    tags-ignore:
      - '*.*'
    paths-ignore:
      - '**.md'
      - '.github/doc/**'
  pull_request:
    branches:
      - 'main'
    tags-ignore:
      - '*.*'
    paths-ignore:
      - '**.md'
      - '.github/doc/**'

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-node@v2
      with:
        node-version: '12'

    - uses: actions/cache@v2
      with:
      path: |
        **/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

    - name: INSTALL
      run: yarn install

    - name: BUILD
      run: yarn build:ci

    - name: TEST
      run: yarn test:ci:lib

    - uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: packages/lib/coverage/lcov.info

    - uses: actions/upload-artifact@v2
      with:
        name: lib-dist
        path: packages/lib/dist/

    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/

  sonarcloud:
    name: Sonar
    needs: build
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0

    - uses: actions/download-artifact@v2
      with:
        name: coverage

    - name: SONAR
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  release:
    name: Release
    if: github.ref == 'refs/heads/main' && !startsWith(github.event.head_commit.message, 'chore(release):')
    needs: build
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    - uses: actions/setup-node@v2
      with:
        node-version: '12'

    - uses: actions/download-artifact@v2
      with:
        name: lib-dist
        path: packages/lib/dist/

    - uses: actions/cache@v2
      with:
      path: |
        **/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

    - name: INSTALL
      run: yarn install

    - name: COPY README.md
      run: cp README.md packages/lib/

    - name: RELEASE
      run: yarn semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        GIT_AUTHOR_NAME: ${{ secrets.GIT_AUTHOR_NAME }}   
        GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}   
        GIT_COMMITTER_NAME: ${{ secrets.GIT_COMMITTER_NAME }}   
        GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}   

  deploy:
    name: Deploy
    if: startsWith(github.event.head_commit.message, 'chore(release):')
    needs: build
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    - uses: actions/setup-node@v2
      with:
        node-version: '12'

    - uses: actions/download-artifact@v2
      with:
        name: dist

    - name: DEPLOY
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        publish_dir: ./dist